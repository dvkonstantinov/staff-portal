# Generated by Django 4.1.1 on 2022-10-25 11:47

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'Имя пользователя уже существует'}, help_text='Имя пользователя не должно превышать 150 символов, из спецсимволов разрешены только @/./+/-/_ ', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(error_messages={'unique': 'Такой Email уже зарегистрирован'}, max_length=150, unique=True, verbose_name='Адрес эл. почты')),
                ('password', models.CharField(max_length=150, verbose_name='Пароль')),
                ('first_name', models.CharField(max_length=150, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=150, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=150, null=True, verbose_name='Отчество')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Статус модератора')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Права администратора')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный пользователь')),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('verified', models.BooleanField(default=False, verbose_name='Email Подтвержден')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['id'],
            },
            managers=[
                ('objects', users.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(default='profile_photos/full/default.jpg', upload_to='profile_photos/full/', verbose_name='Фото')),
                ('thumbnail', models.ImageField(default='profile_photos/thumbs/default.jpg', upload_to='profile_photos/thumbs/', verbose_name='Миниатюра')),
                ('job', models.CharField(blank=True, max_length=300, null=True, verbose_name='Должность')),
                ('about', models.TextField(blank=True, null=True, verbose_name='Обо мне')),
                ('personal_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Личный email')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Телефон')),
                ('telegram', models.CharField(blank=True, max_length=150, null=True, verbose_name='Телеграм')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Доп. информация',
                'verbose_name_plural': 'Доп. информация',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='group',
            field=models.ForeignKey(default='none', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='group', to='users.group', to_field='slug', verbose_name='Группа'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
